{# templates/accueil/index.html.twig #}
<!DOCTYPE html> 
<html lang="fr">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>{% block title %}Garage Parrot{% endblock %}</title>
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">

        <!-- Styles CSS -->
        <style>
            body {
                font-family: 'Barlow', sans-serif;
                background-color: #f9f9f9;
                margin: 0;
                padding: 0;
                min-height: 100vh;
                display: flex;
                flex-direction: column;
            }

            /* Navbar */
            nav {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 0px;
                background-color: rgba(0, 0, 0, 0.6);
                color: #fff;
                position: absolute;
                width: 100%;
                z-index: 100;
            }

            nav .logo {
                font-size: 34px;
                font-weight: bold;
                color: #FFFFFF;
            }

            nav ul {
                list-style: none;
                display: flex;
                gap: 20px;
                margin: 0;
                padding: 0;
            }

            nav ul li {
                font-size: 20px;
                font-weight: bold;
            }

            nav ul li a {
                text-decoration: none;
                color: #FFFFFF;
                padding: 10px;
                border-radius: 5px;
                transition: background-color 0.3s ease;
            }

            nav ul li a:hover {
                background-color: rgba(255, 255, 255, 0.1);
            }

            /* Texte principal et boutons */
            .main-content {
                position: absolute;
                top: 30%;
                left: 5%;
                color: white;
                text-align: left;
            }

            .main-content h1 {
                font-size: 64px;
                font-weight: bold;
                margin: 0;
                text-transform: uppercase;
            }

            .main-content h2 {
                font-size: 24px;
                margin: 10px 0;
            }

            .buttons {
                margin-top: 20px;
            }

            .btn {
                font-size: 20px;
                padding: 10px 30px;
                border: 2px solid red;
                border-radius: 30px;
                color: white;
                background-color: transparent;
                text-transform: uppercase;
                cursor: pointer;
                transition: all 0.3s ease;
                margin-right: 10px;
            }

            .btn.register {
                background-color: red;
                border: 2px solid red;
            }

            .btn:hover {
                background-color: white;
                color: red;
                border: 2px solid red;
            }

            /* Contenu principal pour le canvas */
            .content {
                position: absolute;
                top: 60%; /* Positionner sous les boutons */
                left: 5%;
                width: 90%; /* Largeur ajustée */
                height: 40vh; /* Ajustement de la hauteur */
            }

            canvas {
                display: block;
                width: 100%;
                height: 100%;
            }

            /* Footer */
            footer {
                text-align: center;
                background-color: #262526;
                color: white;
                padding: 20px 0;
                margin-top: auto;
            }

            footer p {
                margin: 5px;
            }

        </style>

        {% block stylesheets %}{% endblock %}
    </head>
    <body>

        <!-- Navbar -->
        <nav>
            <div class="logo">Garage Parrot</div>
            <ul>
                <li><a href="{{ path('app_home') }}">Accueil</a></li>
                <li><a href="{{ path('nos_services') }}">Nos Services</a></li>
                <li><a href="http://localhost:8081/vehicle">Véhicules</a></li>
                {% if is_granted('ROLE_ADMIN') %}
                    <li><a href="{{ path('admin_dashboard') }}">Dashboard Admin</a></li>
                {% endif %}
            </ul>
        </nav>

        <!-- Texte et boutons -->
        <div class="main-content">
            <h2>S-class</h2>
            <h1>MERCEDES MAYBACH</h1>
            <p>Réserver à partir de 4 000 €</p>
            <div class="buttons">
                <button class="btn sign-in">Sign in</button>
                <button class="btn register">Register</button>
            </div>
        </div>

        <!-- Contenu principal pour la voiture -->
        <div class="content">
            <canvas id="carCanvas"></canvas>
        </div>

        <!-- Three.js and GLTFLoader -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/three@0.128/examples/js/loaders/GLTFLoader.js"></script>

        <script>
            // Initialize Three.js Scene
            const scene = new THREE.Scene();

            // Charger une texture pour l'image de fond
            const loader = new THREE.TextureLoader();
            const backgroundTexture = loader.load('/images/mercedes-maybach2.png'); // Chemin vers ton image de fond
            scene.background = backgroundTexture;

            const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('carCanvas'), antialias: true });

            renderer.setSize(window.innerWidth, window.innerHeight);
            document.body.appendChild(renderer.domElement);

            // Charger la première voiture
            const carLoader1 = new THREE.GLTFLoader();
            carLoader1.load('/models/mersedes-benz.glb', function(gltf) {
                const carModel1 = gltf.scene;

                // Désactiver les normal maps pour éviter les erreurs de UV
                carModel1.traverse(function(node) {
                    if (node.isMesh && node.material) {
                        node.material.normalMap = null; // Désactive les normal maps
                    }
                });

                carModel1.scale.set(1, 1, 1); // Ajuster l'échelle

                // Positionner la voiture vers la droite
                carModel1.position.x = 5; // Décale la voiture vers la droite
                carModel1.position.y = -1;  // Ajuster la position Y

                scene.add(carModel1);

                // Animation loop
                function animate() {
                    requestAnimationFrame(animate);
                    carModel1.rotation.y += 0.01; // Faire tourner la voiture
                    renderer.render(scene, camera);
                }
                animate();
            }, undefined, function(error) {
                console.error('Erreur lors du chargement du modèle:', error);
            });

            // Charger la deuxième voiture
            const carLoader2 = new THREE.GLTFLoader();
            carLoader2.load('/models/mercedes-benz_logo.glb', function(gltf) {
                const carModel2 = gltf.scene;

                // Désactiver les normal maps pour éviter les erreurs de UV
                carModel2.traverse(function(node) {
                    if (node.isMesh && node.material) {
                        node.material.normalMap = null; // Désactive les normal maps
                    }
                });

                carModel2.scale.set(0.4, 0.4, 0.4); // Ajuster l'échelle pour être plus petite

                // Positionner la deuxième voiture en haut à gauche
                carModel2.position.x = -5; // Positionner à gauche
                carModel2.position.y = 4;  // Positionner en haut

                scene.add(carModel2);

                // Animation loop
                function animate() {
                    requestAnimationFrame(animate);
                    carModel2.rotation.y += 0.01; // Faire tourner la deuxième voiture
                    renderer.render(scene, camera);
                }
                animate();
            }, undefined, function(error) {
                console.error('Erreur lors du chargement du modèle:', error);
            });

            // Ajouter une lumière ambiante plus forte
            const ambientLight = new THREE.AmbientLight(0xffffff, 1.5); // Intensité augmentée
            scene.add(ambientLight);

            // Ajouter une lumière ponctuelle plus forte
            const pointLight = new THREE.PointLight(0xffffff, 2); // Lumière plus forte
            pointLight.position.set(10, 10, 10);
            scene.add(pointLight);

            // Position de la caméra
            camera.position.z = 10;

            // Gérer le redimensionnement de la fenêtre
            window.addEventListener('resize', () => {
                renderer.setSize(window.innerWidth, window.innerHeight);
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
            });
        </script>

        <!-- Footer -->
        <footer>
            <p>&copy; 2024 Garage Parrot. Tous droits réservés.</p>
            <p>Adresse: 123 Rue du Garage, Paris | Téléphone: +33 1 23 45 67 89</p>
        </footer>

        {% block javascripts %}{% endblock %}
    </body>
</html>
