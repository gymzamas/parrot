version: '3.8'

services:
  # Service PHP
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: garage_parrot_php
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - garage_parrot_network

  # Service Nginx
  nginx:
    image: nginx:alpine
    container_name: garage_parrot_nginx
    ports:
      - "8081:80"
    volumes:
      - .:/var/www/html  # Assure-toi que ce chemin monte bien le projet dans Nginx
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - garage_parrot_network


  # Service MySQL
  mysql:
    image: mysql:8.0
    container_name: garage_parrot_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: garage_parrot_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - garage_parrot_network

  # Service phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: garage_parrot_phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "8082:80"
    depends_on:
      - mysql
    networks:
      - garage_parrot_network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  garage_parrot_network:
    driver: bridge

volumes:
  mysql_data:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
